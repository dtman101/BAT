#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 18, 2020 10:07:09 PM CEST  platform: Linux

import sys

try:
    import Tkinter as tk
    from Tkinter import messagebox
except ImportError:
    import tkinter as tk
    from tkinter import messagebox

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global spinbox_nmbr_shear_planes
    spinbox_nmbr_shear_planes = tk.StringVar()
    global use_shim
    use_shim = tk.IntVar()
    global combo_bolt
    combo_bolt = tk.StringVar()
    global combo_bolt_mat
    combo_bolt_mat = tk.StringVar()
    global joint_mos_type
    joint_mos_type = tk.IntVar()
    global locking_device
    locking_device = tk.IntVar()
    global method_sel
    method_sel = tk.IntVar()
    global selectedButton
    selectedButton = tk.IntVar()
    global combobox
    combobox = tk.StringVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root, materials, bolts
    w = gui
    top_level = top
    root = top
    # args[0]: materials
    materials = args[0]
    # args[1]: bolts
    bolts = args[1]
    # init gui with the default settings
    init_config()

# set the gui with the default settings
def init_config():
    w.Radiobutton_Esapss.select()
    w.Radiobutton_ECSS.configure(state = "disabled")
    w.Radiobutton_VDI2230.configure(state = "disabled")
    w.Radiobutton_Jt_min.select()
    w.Radiobutton_Jt_mean.configure(state="disabled")
    w.Radiobutton_Lock_No.select()
    w.Entry_Prevailing_Torque.configure(state = "disabled")
    w.Entry_Loading_Plane_Factor.insert(0, "0.5")
    # fill bolts combo-box
    bolt_combo = []
    for key in bolts.bolts:
        bolt_combo.append(key)
    w.TCombobox_Bolt["value"] = bolt_combo
    # fill bolt-material combo-box
    mat_combo = []
    for key in materials.materials:
        mat_combo.append(key)
    w.TCombobox_Bolt_Material["value"] = mat_combo
    w.TCombobox_cp_mat["value"] = mat_combo
    # set default FOS values
    w.Entry_fos_y.insert(0, "1.1")
    w.Entry_fos_u.insert(0, "1.25")
    w.Entry_fos_slip.insert(0, "1.1")
    w.Entry_fos_gap.insert(0, "1.0")
    # clamped parts
    spinbox_nmbr_shear_planes.set(1)

# method selection radio-buttons
def radio_ecss(p1): pass
def radio_esapss(p1): pass
def radio_vdi2230(p1): pass

# locking device radio-buttons
def locking_device_no(p1):
    w.Entry_Prevailing_Torque.configure(state = "disabled")
    #print(w.TCombobox_Bolt.get())
def locking_device_yes(p1):
    w.Entry_Prevailing_Torque.configure(state = "normal")

# exit BAT via File-Exit
def quit_menu():
    print("BAT GUI closed...ciau!")
    root.quit()

def info_menu():
    messagebox.showinfo("BAT GUI Info",\
        "BAT GUI designed with Tkinter\nand PAGE version 5.0.3\n\nby Michael Sams")

def open_inp_menu():
    print('bat_gui_support.open_inp_menu')
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

