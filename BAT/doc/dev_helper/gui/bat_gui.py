#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 17, 2020 10:34:50 PM CEST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import bat_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    bat_gui_support.set_Tk_var()
    top = Toplevel1 (root)
    bat_gui_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    bat_gui_support.set_Tk_var()
    top = Toplevel1 (w)
    bat_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("740x581+353+42")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1, 1)
        top.title("Bolt Analysis Tool - BAT")
        top.configure(cursor="arrow")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Open *.inp File")
        self.sub_menu.add_separator(
                background="#d9d9d9")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=bat_gui_support.quit_menu,
                font="TkMenuFont",
                foreground="#000000",
                label="Exit")
        self.sub_menu1 = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu1,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Help")
        self.sub_menu1.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Info")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook = ttk.Notebook(top)
        self.TNotebook.place(relx=0.027, rely=0.034, relheight=0.929
                , relwidth=0.949)
        self.TNotebook.configure(takefocus="")
        self.TNotebook.configure(cursor="fleur")
        self.TNotebook_Joint_Input = tk.Frame(self.TNotebook)
        self.TNotebook.add(self.TNotebook_Joint_Input, padding=3)
        self.TNotebook.tab(0, text="Joint Input 1", compound="left"
                ,underline="-1", )
        self.TNotebook_t1 = tk.Frame(self.TNotebook)
        self.TNotebook.add(self.TNotebook_t1, padding=3)
        self.TNotebook.tab(1, text="Joint Input 2", compound="none"
                ,underline="-1", )
        self.TNotebook_Loads = tk.Frame(self.TNotebook)
        self.TNotebook.add(self.TNotebook_Loads, padding=3)
        self.TNotebook.tab(2, text="Loads",compound="left",underline="-1",)
        self.TNotebook_Calculate = tk.Frame(self.TNotebook)
        self.TNotebook.add(self.TNotebook_Calculate, padding=3)
        self.TNotebook.tab(3, text="Calculate",compound="none",underline="-1",)

        self.Labelframe_Bolt_Def = tk.LabelFrame(self.TNotebook_Joint_Input)
        self.Labelframe_Bolt_Def.place(relx=0.029, rely=0.183, relheight=0.8
                , relwidth=0.943)
        self.Labelframe_Bolt_Def.configure(relief='groove')
        self.Labelframe_Bolt_Def.configure(text='''Bolt Definition''')

        self.TCombobox_Bolt = ttk.Combobox(self.Labelframe_Bolt_Def)
        self.TCombobox_Bolt.place(relx=0.288, rely=0.156, relheight=0.066
                , relwidth=0.283, bordermode='ignore')
        self.TCombobox_Bolt.configure(textvariable=bat_gui_support.combobox)
        self.TCombobox_Bolt.configure(takefocus="")

        self.Label_Jt = tk.Label(self.Labelframe_Bolt_Def)
        self.Label_Jt.place(relx=0.03, rely=0.078, height=27, width=140
                , bordermode='ignore')
        self.Label_Jt.configure(activebackground="#f9f9f9")
        self.Label_Jt.configure(anchor='e')
        self.Label_Jt.configure(text='''Joint MOS Type:''')

        self.Radiobutton_Jt_min = tk.Radiobutton(self.Labelframe_Bolt_Def)
        self.Radiobutton_Jt_min.place(relx=0.273, rely=0.075, relheight=0.066
                , relwidth=0.153, bordermode='ignore')
        self.Radiobutton_Jt_min.configure(activebackground="#f9f9f9")
        self.Radiobutton_Jt_min.configure(justify='left')
        self.Radiobutton_Jt_min.configure(text='''MIN (STD)''')
        self.Radiobutton_Jt_min.configure(value="0")
        self.Radiobutton_Jt_min.configure(variable=bat_gui_support.joint_mos_type)

        self.Radiobutton_Jt_mean = tk.Radiobutton(self.Labelframe_Bolt_Def)
        self.Radiobutton_Jt_mean.place(relx=0.439, rely=0.078, relheight=0.066
                , relwidth=0.153, bordermode='ignore')
        self.Radiobutton_Jt_mean.configure(activebackground="#f9f9f9")
        self.Radiobutton_Jt_mean.configure(justify='left')
        self.Radiobutton_Jt_mean.configure(text='''MEAN''')
        self.Radiobutton_Jt_mean.configure(value="1")
        self.Radiobutton_Jt_mean.configure(variable=bat_gui_support.joint_mos_type)

        self.Label_Bolt = tk.Label(self.Labelframe_Bolt_Def)
        self.Label_Bolt.place(relx=0.03, rely=0.156, height=27, width=140
                , bordermode='ignore')
        self.Label_Bolt.configure(activebackground="#f9f9f9")
        self.Label_Bolt.configure(anchor='e')
        self.Label_Bolt.configure(text='''Bolt:''')

        self.Label_Bolt_Material = tk.Label(self.Labelframe_Bolt_Def)
        self.Label_Bolt_Material.place(relx=0.03, rely=0.234, height=27
                , width=140, bordermode='ignore')
        self.Label_Bolt_Material.configure(activebackground="#f9f9f9")
        self.Label_Bolt_Material.configure(anchor='e')
        self.Label_Bolt_Material.configure(text='''Bolt Material:''')

        self.TCombobox_Bolt_Material = ttk.Combobox(self.Labelframe_Bolt_Def)
        self.TCombobox_Bolt_Material.place(relx=0.288, rely=0.234
                , relheight=0.066, relwidth=0.283, bordermode='ignore')
        self.TCombobox_Bolt_Material.configure(textvariable=bat_gui_support.combobox)
        self.TCombobox_Bolt_Material.configure(takefocus="")

        self.TLabel1 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel1.place(relx=0.045, rely=0.416, height=27, width=237
                , bordermode='ignore')
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(anchor='e')
        self.TLabel1.configure(justify='left')
        self.TLabel1.configure(text='''Coefficient of Friction - Bolt Head:''')

        self.TLabel2 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel2.place(relx=0.47, rely=0.338, height=27, width=50
                , bordermode='ignore')
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief="flat")
        self.TLabel2.configure(anchor='center')
        self.TLabel2.configure(justify='left')
        self.TLabel2.configure(text='''MIN''')

        self.TLabel2_1 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel2_1.place(relx=0.652, rely=0.338, height=27, width=50
                , bordermode='ignore')
        self.TLabel2_1.configure(background="#d9d9d9")
        self.TLabel2_1.configure(foreground="#000000")
        self.TLabel2_1.configure(font="TkDefaultFont")
        self.TLabel2_1.configure(relief="flat")
        self.TLabel2_1.configure(anchor='center')
        self.TLabel2_1.configure(justify='left')
        self.TLabel2_1.configure(text='''MAX''')

        self.Entry_Cof_Head_Min = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Cof_Head_Min.place(relx=0.439, rely=0.416, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Cof_Head_Min.configure(background="white")
        self.Entry_Cof_Head_Min.configure(font="TkFixedFont")
        self.Entry_Cof_Head_Min.configure(selectbackground="#c4c4c4")

        self.Entry_Cof_Head_Max = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Cof_Head_Max.place(relx=0.621, rely=0.416, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Cof_Head_Max.configure(background="white")
        self.Entry_Cof_Head_Max.configure(font="TkFixedFont")
        self.Entry_Cof_Head_Max.configure(selectbackground="#c4c4c4")

        self.TLabel1_8 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel1_8.place(relx=0.045, rely=0.494, height=27, width=237
                , bordermode='ignore')
        self.TLabel1_8.configure(background="#d9d9d9")
        self.TLabel1_8.configure(foreground="#000000")
        self.TLabel1_8.configure(font="TkDefaultFont")
        self.TLabel1_8.configure(relief="flat")
        self.TLabel1_8.configure(anchor='e')
        self.TLabel1_8.configure(justify='left')
        self.TLabel1_8.configure(text='''Coefficient of Friction - Thread:''')

        self.Entry_Cof_Thread_Min = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Cof_Thread_Min.place(relx=0.439, rely=0.494, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Cof_Thread_Min.configure(background="white")
        self.Entry_Cof_Thread_Min.configure(font="TkFixedFont")
        self.Entry_Cof_Thread_Min.configure(selectbackground="#c4c4c4")

        self.Entry_Cof_Thread_Max = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Cof_Thread_Max.place(relx=0.621, rely=0.494, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Cof_Thread_Max.configure(background="white")
        self.Entry_Cof_Thread_Max.configure(font="TkFixedFont")
        self.Entry_Cof_Thread_Max.configure(selectbackground="#c4c4c4")

        self.TLabel1_9 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel1_9.place(relx=0.212, rely=0.674, height=27, width=147
                , bordermode='ignore')
        self.TLabel1_9.configure(background="#d9d9d9")
        self.TLabel1_9.configure(foreground="#000000")
        self.TLabel1_9.configure(font="TkDefaultFont")
        self.TLabel1_9.configure(relief="flat")
        self.TLabel1_9.configure(anchor='e')
        self.TLabel1_9.configure(justify='left')
        self.TLabel1_9.configure(text='''Tightening Torque:''')

        self.TSeparator1 = ttk.Separator(self.Labelframe_Bolt_Def)
        self.TSeparator1.place(relx=0.042, rely=0.616, relwidth=0.92
                , bordermode='ignore')

        self.Entry_Tight_Torque = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Tight_Torque.place(relx=0.47, rely=0.674, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Tight_Torque.configure(background="white")
        self.Entry_Tight_Torque.configure(font="TkFixedFont")
        self.Entry_Tight_Torque.configure(selectbackground="#c4c4c4")

        self.TLabel2_11 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel2_11.place(relx=0.621, rely=0.674, height=27, width=50
                , bordermode='ignore')
        self.TLabel2_11.configure(background="#d9d9d9")
        self.TLabel2_11.configure(foreground="#000000")
        self.TLabel2_11.configure(font="TkDefaultFont")
        self.TLabel2_11.configure(relief="flat")
        self.TLabel2_11.configure(anchor='center')
        self.TLabel2_11.configure(justify='left')
        self.TLabel2_11.configure(text='''Nm''')

        self.TLabel1_10 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel1_10.place(relx=0.015, rely=0.752, height=27, width=277
                , bordermode='ignore')
        self.TLabel1_10.configure(background="#d9d9d9")
        self.TLabel1_10.configure(foreground="#000000")
        self.TLabel1_10.configure(font="TkDefaultFont")
        self.TLabel1_10.configure(relief="flat")
        self.TLabel1_10.configure(anchor='e')
        self.TLabel1_10.configure(justify='left')
        self.TLabel1_10.configure(text='''Torque Tolerance of Tightening Device:''')

        self.TLabel2_12 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel2_12.place(relx=0.621, rely=0.752, height=27, width=50
                , bordermode='ignore')
        self.TLabel2_12.configure(background="#d9d9d9")
        self.TLabel2_12.configure(foreground="#000000")
        self.TLabel2_12.configure(font="TkDefaultFont")
        self.TLabel2_12.configure(relief="flat")
        self.TLabel2_12.configure(anchor='center')
        self.TLabel2_12.configure(justify='left')
        self.TLabel2_12.configure(text='''Nm''')

        self.Entry_Torque_Tol = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Torque_Tol.place(relx=0.47, rely=0.752, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Torque_Tol.configure(background="white")
        self.Entry_Torque_Tol.configure(font="TkFixedFont")
        self.Entry_Torque_Tol.configure(selectbackground="#c4c4c4")

        self.TLabel1_11 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel1_11.place(relx=0.015, rely=0.832, height=26, width=277
                , bordermode='ignore')
        self.TLabel1_11.configure(background="#d9d9d9")
        self.TLabel1_11.configure(foreground="#000000")
        self.TLabel1_11.configure(font="TkDefaultFont")
        self.TLabel1_11.configure(relief="flat")
        self.TLabel1_11.configure(anchor='e')
        self.TLabel1_11.configure(justify='left')
        self.TLabel1_11.configure(text='''Locking Device Used:''')

        self.TLabel1_1 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel1_1.place(relx=0.015, rely=0.91, height=26, width=277
                , bordermode='ignore')
        self.TLabel1_1.configure(background="#d9d9d9")
        self.TLabel1_1.configure(foreground="#000000")
        self.TLabel1_1.configure(font="TkDefaultFont")
        self.TLabel1_1.configure(relief="flat")
        self.TLabel1_1.configure(anchor='e')
        self.TLabel1_1.configure(justify='left')
        self.TLabel1_1.configure(text='''Loading Plane Factor:''')

        self.Radiobutton_Lock_No = tk.Radiobutton(self.Labelframe_Bolt_Def)
        self.Radiobutton_Lock_No.place(relx=0.455, rely=0.835, relheight=0.058
                , relwidth=0.103, bordermode='ignore')
        self.Radiobutton_Lock_No.configure(activebackground="#f9f9f9")
        self.Radiobutton_Lock_No.configure(justify='left')
        self.Radiobutton_Lock_No.configure(text='''NO''')
        self.Radiobutton_Lock_No.configure(value="0")
        self.Radiobutton_Lock_No.configure(variable=bat_gui_support.locking_device)
        self.Radiobutton_Lock_No.bind('<Button-1>',lambda e:bat_gui_support.locking_device_no(e))

        self.Radiobutton_Lock_Yes = tk.Radiobutton(self.Labelframe_Bolt_Def)
        self.Radiobutton_Lock_Yes.place(relx=0.583, rely=0.835, relheight=0.058
                , relwidth=0.103, bordermode='ignore')
        self.Radiobutton_Lock_Yes.configure(activebackground="#f9f9f9")
        self.Radiobutton_Lock_Yes.configure(justify='left')
        self.Radiobutton_Lock_Yes.configure(text='''YES''')
        self.Radiobutton_Lock_Yes.configure(value="1")
        self.Radiobutton_Lock_Yes.configure(variable=bat_gui_support.locking_device)
        self.Radiobutton_Lock_Yes.bind('<Button-1>',lambda e:bat_gui_support.locking_device_yes(e))

        self.TLabel2_13 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel2_13.place(relx=0.894, rely=0.835, height=27, width=50
                , bordermode='ignore')
        self.TLabel2_13.configure(background="#d9d9d9")
        self.TLabel2_13.configure(foreground="#000000")
        self.TLabel2_13.configure(font="TkDefaultFont")
        self.TLabel2_13.configure(relief="flat")
        self.TLabel2_13.configure(anchor='center')
        self.TLabel2_13.configure(justify='left')
        self.TLabel2_13.configure(text='''Nm''')

        self.Entry_Prevailing_Torque = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Prevailing_Torque.place(relx=0.803, rely=0.835, height=25
                , relwidth=0.091, bordermode='ignore')
        self.Entry_Prevailing_Torque.configure(background="white")
        self.Entry_Prevailing_Torque.configure(font="TkFixedFont")
        self.Entry_Prevailing_Torque.configure(selectbackground="#c4c4c4")

        self.TLabel2_2 = ttk.Label(self.Labelframe_Bolt_Def)
        self.TLabel2_2.place(relx=0.727, rely=0.835, height=27, width=50
                , bordermode='ignore')
        self.TLabel2_2.configure(background="#d9d9d9")
        self.TLabel2_2.configure(foreground="#000000")
        self.TLabel2_2.configure(font="TkDefaultFont")
        self.TLabel2_2.configure(relief="flat")
        self.TLabel2_2.configure(anchor='center')
        self.TLabel2_2.configure(justify='left')
        self.TLabel2_2.configure(text='''Tp:''')

        self.Entry_Loading_Plane_Factor = tk.Entry(self.Labelframe_Bolt_Def)
        self.Entry_Loading_Plane_Factor.place(relx=0.47, rely=0.91, height=25
                , relwidth=0.152, bordermode='ignore')
        self.Entry_Loading_Plane_Factor.configure(background="white")
        self.Entry_Loading_Plane_Factor.configure(font="TkFixedFont")
        self.Entry_Loading_Plane_Factor.configure(selectbackground="#c4c4c4")

        self.Label_Method = tk.Label(self.TNotebook_Joint_Input)
        self.Label_Method.place(relx=0.027, rely=0.041, height=26, width=100)
        self.Label_Method.configure(activebackground="#f9f9f9")
        self.Label_Method.configure(anchor='e')
        self.Label_Method.configure(text='''Method:''')

        self.Radiobutton_Esapss = tk.Radiobutton(self.TNotebook_Joint_Input)
        self.Radiobutton_Esapss.place(relx=0.171, rely=0.041, relheight=0.051
                , relwidth=0.183)
        self.Radiobutton_Esapss.configure(activebackground="#f9f9f9")
        self.Radiobutton_Esapss.configure(justify='left')
        self.Radiobutton_Esapss.configure(text='''ESA PSS-03''')
        self.Radiobutton_Esapss.configure(value="0")
        self.Radiobutton_Esapss.configure(variable=bat_gui_support.method_sel)
        self.Radiobutton_Esapss.bind('<Button-1>',lambda e:bat_gui_support.radio_esapss(e))

        self.Radiobutton_VDI2230 = tk.Radiobutton(self.TNotebook_Joint_Input)
        self.Radiobutton_VDI2230.place(relx=0.643, rely=0.039, relheight=0.051
                , relwidth=0.2)
        self.Radiobutton_VDI2230.configure(activebackground="#f9f9f9")
        self.Radiobutton_VDI2230.configure(justify='left')
        self.Radiobutton_VDI2230.configure(text='''VDI 2230''')
        self.Radiobutton_VDI2230.configure(value="2")
        self.Radiobutton_VDI2230.configure(variable=bat_gui_support.method_sel)
        self.Radiobutton_VDI2230.bind('<Button-1>',lambda e:bat_gui_support.radio_vdi2230(e))

        self.Radiobutton_ECSS = tk.Radiobutton(self.TNotebook_Joint_Input)
        self.Radiobutton_ECSS.place(relx=0.4, rely=0.041, relheight=0.051
                , relwidth=0.2)
        self.Radiobutton_ECSS.configure(activebackground="#f9f9f9")
        self.Radiobutton_ECSS.configure(justify='left')
        self.Radiobutton_ECSS.configure(text='''ECSS bla''')
        self.Radiobutton_ECSS.configure(value="1")
        self.Radiobutton_ECSS.configure(variable=bat_gui_support.method_sel)
        self.Radiobutton_ECSS.bind('<Button-1>',lambda e:bat_gui_support.radio_ecss(e))

        self.Label1 = tk.Label(self.TNotebook_Joint_Input)
        self.Label1.place(relx=0.029, rely=0.101, height=26, width=100)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='e')
        self.Label1.configure(text='''Project Title:''')

        self.Entry1 = tk.Entry(self.TNotebook_Joint_Input)
        self.Entry1.place(relx=0.2, rely=0.101,height=25, relwidth=0.766)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="#c4c4c4")

if __name__ == '__main__':
    vp_start_gui()





